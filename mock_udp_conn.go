// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package main is a generated GoMock package.
package main

import (
	net "net"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockUDPConn is a mock of UDPConn interface.
type MockUDPConn struct {
	ctrl     *gomock.Controller
	recorder *MockUDPConnMockRecorder
}

// MockUDPConnMockRecorder is the mock recorder for MockUDPConn.
type MockUDPConnMockRecorder struct {
	mock *MockUDPConn
}

// NewMockUDPConn creates a new mock instance.
func NewMockUDPConn(ctrl *gomock.Controller) *MockUDPConn {
	mock := &MockUDPConn{ctrl: ctrl}
	mock.recorder = &MockUDPConnMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUDPConn) EXPECT() *MockUDPConnMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockUDPConn) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockUDPConnMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockUDPConn)(nil).Close))
}

// ReadFromUDP mocks base method.
func (m *MockUDPConn) ReadFromUDP(b []byte) (int, *net.UDPAddr, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadFromUDP", b)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(*net.UDPAddr)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ReadFromUDP indicates an expected call of ReadFromUDP.
func (mr *MockUDPConnMockRecorder) ReadFromUDP(b interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadFromUDP", reflect.TypeOf((*MockUDPConn)(nil).ReadFromUDP), b)
}

// SetReadDeadline mocks base method.
func (m *MockUDPConn) SetReadDeadline(t time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetReadDeadline", t)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetReadDeadline indicates an expected call of SetReadDeadline.
func (mr *MockUDPConnMockRecorder) SetReadDeadline(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetReadDeadline", reflect.TypeOf((*MockUDPConn)(nil).SetReadDeadline), t)
}
